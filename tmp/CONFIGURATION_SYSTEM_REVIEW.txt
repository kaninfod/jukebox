# Jukebox Configuration System Review

## Current Configuration Architecture

### 1. **config.py** - Centralized Configuration Class
Located: `/Volumes/Shared/jukebox/app/config.py`

#### Current Configuration Items:
```python
# Subsonic/Navidrome Configuration
- SUBSONIC_URL (default: "http://192.168.68.102:4747")
- SUBSONIC_USER (default: "jukebox")
- SUBSONIC_PASS (default: "123jukepi")
- SUBSONIC_CLIENT (default: "jukebox")
- SUBSONIC_API_VERSION (default: "1.15.0")

# Database Configuration
- DB_HOST (default: "192.168.68.102")
- DB_PORT (default: 3306)
- DB_USERNAME (default: "dbuser")
- DB_PASSWORD (required from .env)
- DB_NAME (default: "hingedb")

# GPIO Pin Configuration
- DISPLAY_POWER_GPIO (default: 20)
- DISPLAY_BACKLIGHT_GPIO (default: 18)
- ROTARY_ENCODER_PIN_A (default: 6)
- ROTARY_ENCODER_PIN_B (default: 5)
- RFID_CS_PIN (default: 7)
- NFC_CARD_SWITCH_GPIO (default: 26)
- BUTTON_1_GPIO through BUTTON_5_GPIO (defaults: 14,15,12,19,17)

# Hardware Settings
- RFID_POLL_INTERVAL (default: 1.0s)
- RFID_READ_TIMEOUT (default: 5.0s)
- ENCODER_BOUNCETIME (default: 2ms)
- BUTTON_BOUNCETIME (default: 200ms)

# Media Player Configuration
- MEDIA_PLAYER_ENTITY_ID (default: "media_player.living_room")

# Application Settings
- DEBUG_MODE (default: false)
- LOG_LEVEL (default: "INFO")
- STATIC_FILE_PATH (default: "static_files")

# Hardcoded Configuration Arrays
- FONT_DEFINITIONS (5 fonts with paths and sizes)
- ICON_DEFINITIONS (9 icons with dimensions)
```

### 2. **.env** - Environment Variables
Located: `/Volumes/Shared/jukebox/.env`

#### Current .env Variables:
```properties
# Home Assistant (Present but NOT used in config.py)
HA_BASE_URL=http://192.168.68.100:8123
HA_WS_URL=ws://192.168.68.100:8123/api/websocket
HA_TOKEN=<jwt_token>

# Database Configuration
DB_HOST=192.168.68.102
DB_PORT=3306
DB_USERNAME=dbuser
DB_PASSWORD=4AllData
DB_NAME=hingedb

# YouTube Music OAuth (Present but NOT used in config.py)
YOUTUBE_ACCESS_TOKEN=<token>
YOUTUBE_REFRESH_TOKEN=<token>
YOUTUBE_SCOPE=https://www.googleapis.com/auth/youtube

# GPIO Pin Configuration (All present)
# Hardware Settings (All present)
# Media Player Configuration (Present)
# Application Settings (Present)
```

### 3. **menu_config.json** - UI Menu Configuration
Located: `/Volumes/Shared/jukebox/app/config/menu_config.json`

#### Current Menu Configuration:
```json
- Root menu with Music and Chromecasts
- Music menu with Artists and Albums
- Chromecasts menu with 4 hardcoded devices:
  * Living Room (Current)
  * TV Lounge
  * Signe  
  * Bathroom Speaker
- Menu actions and payloads
```

## Configuration Gaps Analysis

### üî¥ **Critical Missing Items**

#### 1. **Home Assistant Configuration** - MISSING FROM CONFIG.PY
```python
# Present in .env but not loaded in config.py:
HA_BASE_URL=http://192.168.68.100:8123
HA_WS_URL=ws://192.168.68.100:8123/api/websocket
HA_TOKEN=<jwt_token>
```
**Impact**: HomeAssistant integration may not be properly configured.

#### 2. **YouTube Music OAuth** - MISSING FROM CONFIG.PY
```python
# Present in .env but not loaded in config.py:
YOUTUBE_ACCESS_TOKEN=<token>
YOUTUBE_REFRESH_TOKEN=<token>
YOUTUBE_SCOPE=https://www.googleapis.com/auth/youtube
```
**Impact**: YouTube Music service may not be properly configured.

#### 3. **Logging Configuration** - HARDCODED
```python
# In logging_config.py - should be configurable:
syslog_address = ('192.168.68.102', 514)  # HARDCODED IP
```
**Impact**: Logging server IP is hardcoded, not configurable.

### üü° **Hardcoded Values That Should Be Configurable**

#### 1. **Network Timeouts** - SCATTERED HARDCODED VALUES
```python
# Found throughout codebase:
timeout=10  # Chromecast operations
timeout=5   # System operations  
time.sleep(3)  # Discovery delays
```
**Recommendation**: Add timeout configuration section.

#### 2. **Default Chromecast Device** - HARDCODED
```python
# In multiple files:
"Living Room"  # Default device hardcoded
self.current_device = "Living Room"
```
**Recommendation**: Make default device configurable.

#### 3. **Display Configuration** - PARTIALLY HARDCODED
```python
# Display dimensions inferred from hardware, but could be explicit:
width=480, height=320  # ILI9488 display dimensions
```
**Recommendation**: Make display dimensions explicit in config.

#### 4. **Font Paths** - HARDCODED ABSOLUTE PATHS
```python
# Hardcoded absolute paths:
"/home/pi/shared/jukebox/fonts/opensans/OpenSans-Regular.ttf"
```
**Recommendation**: Use relative paths or configurable font directory.

#### 5. **Service URLs and Ports** - SOME HARDCODED
```python
# Subsonic default in config vs. actual in service:
SUBSONIC_URL: "http://192.168.68.102:4747"  # config.py default
self.base_url = "http://192.168.68.102:4533"  # subsonic_service.py fallback
```
**Recommendation**: Ensure consistency between defaults and actual usage.

### üü¢ **Well-Configured Items**
- GPIO pin configuration ‚úÖ
- Database configuration ‚úÖ  
- Hardware timing settings ‚úÖ
- Basic application settings ‚úÖ
- Icon and static file paths ‚úÖ

## Recommendations for Configuration Improvements

### **Priority 1 - Critical Fixes**

1. **Add Missing Environment Variables to config.py**:
```python
# Add to Config class:
HA_BASE_URL: str = os.getenv("HA_BASE_URL", "http://localhost:8123")
HA_WS_URL: str = os.getenv("HA_WS_URL", "ws://localhost:8123/api/websocket")
HA_TOKEN: str = os.getenv("HA_TOKEN", "")
YOUTUBE_ACCESS_TOKEN: str = os.getenv("YOUTUBE_ACCESS_TOKEN", "")
YOUTUBE_REFRESH_TOKEN: str = os.getenv("YOUTUBE_REFRESH_TOKEN", "") 
YOUTUBE_SCOPE: str = os.getenv("YOUTUBE_SCOPE", "https://www.googleapis.com/auth/youtube")
```

2. **Add Logging Configuration**:
```python
# Add to Config class:
LOG_SERVER_HOST: str = os.getenv("LOG_SERVER_HOST", "192.168.68.102")
LOG_SERVER_PORT: int = int(os.getenv("LOG_SERVER_PORT", "514"))
```

### **Priority 2 - Timeout and Network Configuration**

3. **Add Timeout Configuration Section**:
```python
# Add to Config class:
CHROMECAST_CONNECT_TIMEOUT: int = int(os.getenv("CHROMECAST_CONNECT_TIMEOUT", "10"))
CHROMECAST_DISCOVERY_TIMEOUT: int = int(os.getenv("CHROMECAST_DISCOVERY_TIMEOUT", "3"))
HTTP_REQUEST_TIMEOUT: int = int(os.getenv("HTTP_REQUEST_TIMEOUT", "10"))
SYSTEM_OPERATION_TIMEOUT: int = int(os.getenv("SYSTEM_OPERATION_TIMEOUT", "5"))
```

### **Priority 3 - Device and Display Configuration**

4. **Add Default Device Configuration**:
```python
# Add to Config class:
DEFAULT_CHROMECAST_DEVICE: str = os.getenv("DEFAULT_CHROMECAST_DEVICE", "Living Room")
```

5. **Add Display Configuration**:
```python
# Add to Config class:
DISPLAY_WIDTH: int = int(os.getenv("DISPLAY_WIDTH", "480"))
DISPLAY_HEIGHT: int = int(os.getenv("DISPLAY_HEIGHT", "320"))
DISPLAY_ROTATION: int = int(os.getenv("DISPLAY_ROTATION", "0"))
```

6. **Make Font Paths Configurable**:
```python
# Add to Config class:
FONT_BASE_PATH: str = os.getenv("FONT_BASE_PATH", "/home/pi/shared/jukebox/fonts")
```

## Configuration File Structure Summary

### **Current Structure**:
```
/Volumes/Shared/jukebox/
‚îú‚îÄ‚îÄ .env                           # Environment variables
‚îú‚îÄ‚îÄ .env.example                   # Template
‚îú‚îÄ‚îÄ app/
‚îÇ   ‚îú‚îÄ‚îÄ config.py                  # Main configuration class
‚îÇ   ‚îî‚îÄ‚îÄ config/
‚îÇ       ‚îî‚îÄ‚îÄ menu_config.json       # UI menu structure
‚îî‚îÄ‚îÄ app/core/
    ‚îî‚îÄ‚îÄ logging_config.py          # Logging setup (has hardcoded values)
```

### **Configuration Usage Patterns**:
- ‚úÖ **Good**: GPIO pins, hardware settings, database
- ‚ö†Ô∏è  **Mixed**: Some services use config.py, others have hardcoded values
- ‚ùå **Poor**: Timeouts, logging server, some service URLs hardcoded

## Action Items

1. **Immediate** - Add missing HA and YouTube config to config.py
2. **Short-term** - Add timeout configuration section
3. **Medium-term** - Centralize all hardcoded network addresses 
4. **Long-term** - Consider splitting config into logical sections (hardware.py, network.py, etc.)

## Validation Needed

- Verify all services actually use the config values (some may have hardcoded fallbacks)
- Check if HomeAssistant service is actually being used
- Audit all timeout values throughout codebase
- Ensure .env.example matches actual .env requirements
