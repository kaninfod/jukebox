# Raspberry Pi Jukebox GPIO Environment - Working Configuration (as of 2025-09-16)

## Python Virtual Environment (venv)
- Only install the following GPIO library via pip:
  - `rpi-lgpio` (provides drop-in `RPi.GPIO` compatibility)
- Do NOT install:
  - `RPi.GPIO` (pip)
  - `lgpio` (pip)
  - `pigpio`, `gpiozero` (unless your code uses them directly)

## System Packages (apt)
- `python3-lgpio` may be installed (OK, does not interfere)
- `python3-rpi.gpio` must NOT be installed
- `rpi.gpio-common` may be present (harmless)
- Other system GPIO libs (libgpiod, liblgpio, etc.) are fine

## venv Creation
- Create venv normally (no --system-site-packages):
  ```sh
  python3 -m venv venv
  source venv/bin/activate
  pip install --no-cache-dir rpi-lgpio
  ```

## After any GPIO library changes
- Always reboot the Pi:
  ```sh
  sudo reboot
  ```

## What NOT to do
- Do NOT install both `RPi.GPIO` and `rpi-lgpio` in the venv
- Do NOT install `python3-rpi.gpio` system-wide
- Do NOT install `lgpio` via pip directly
- Do NOT mix system and venv packages for GPIO

## Troubleshooting Checklist
- If you see `ModuleNotFoundError: No module named 'RPi'`:
  - Ensure `rpi-lgpio` is installed in the venv
- If you see `Failed to add edge detection`:
  - Ensure only `rpi-lgpio` is installed in the venv
  - Ensure `python3-rpi.gpio` is NOT installed system-wide
  - Reboot after changes
- If all else fails, recreate the venv and install only `rpi-lgpio`

## Useful Commands
- List pip GPIO packages in venv:
  ```sh
  pip list | grep gpio
  ```
- List system GPIO packages:
  ```sh
  dpkg -l | grep gpio
  ```
- Check venv sys.path:
  ```sh
  python -c "import sys; print(sys.path)"
  ```

## Notes
- This configuration is confirmed working on Raspberry Pi 4, 64-bit OS, Python 3.11, as of 2025-09-16.
- All hardware features (RFID, rotary encoder, pushbuttons) work with this setup.
